syntax = "proto3";
package gauss.defi;

import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";
import "gogoproto/gogo.proto";

import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";
import "gauss/defi/defi.proto";

option go_package = "github.com/gauss/gauss/v4/x/defi/types";

// Msg defines the staking Msg service.
service Msg {
  // CreateDefi defines a method for creating a new defi.
  rpc CreateDefi(MsgCreateDefi) returns (MsgCreateDefiResponse);

  // EditDefi defines a method for editing an existing defi.
  rpc EditDefi(MsgEditDefi) returns (MsgEditDefiResponse);

  // from a delegator to a defi.
  rpc Delegate(MsgDefiDelegate) returns (MsgDefiDelegateResponse);

  // Undelegate defines a method for performing an undelegation from a
  // delegate and a defi.
  rpc Undelegate(MsgDefiUndelegate) returns (MsgDefiUndelegateResponse);

  // SetWithdrawAddress defines a method to change the withdraw address
  // for a delegator (or defi self-delegation).
  rpc SetWithdrawAddress(MsgSetDefiWithdrawAddress) returns (MsgSetDefiWithdrawAddressResponse);

  // WithdrawDelegatorReward defines a method to withdraw rewards of delegator
  // from a single defi.
  rpc WithdrawDelegatorReward(MsgWithdrawDefiDelegatorReward) returns (MsgWithdrawDefiDelegatorRewardResponse);

  // WithdrawDefiCommission defines a method to withdraw the
  // full commission to the defi address.
  rpc WithdrawDefiCommission(MsgWithdrawDefiCommission) returns (MsgWithdrawDefiCommissionResponse);

  // FundCommunityPool defines a method to allow an account to directly
  // fund the community pool.
  rpc FundCommunityPool(MsgFundDefiCommunityPool) returns (MsgFundDefiCommunityPoolResponse);
}

// MsgCreateDefi defines a SDK message for creating a new defi.
message MsgCreateDefi {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  Description     description         = 1 [(gogoproto.nullable) = false];
  string          min_self_delegation = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.moretags)   = "yaml:\"min_self_delegation\"",
    (gogoproto.nullable)   = false
  ];
  string                   delegator_address = 3 [(gogoproto.moretags) = "yaml:\"delegator_address\""];
  string                   defi_address = 4 [(gogoproto.moretags) = "yaml:\"defi_address\""];
  cosmos.base.v1beta1.Coin value             = 5 [(gogoproto.nullable) = false];
}

// MsgCreateDefiResponse defines the Msg/CreateDefi response type.
message MsgCreateDefiResponse {}

// MsgEditDefi defines a SDK message for editing an existing defi.
message MsgEditDefi {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  Description description    = 1 [(gogoproto.nullable) = false];
  string      defi_address   = 2 [(gogoproto.moretags) = "yaml:\"address\""];

  string min_self_delegation = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.moretags)   = "yaml:\"min_self_delegation\""
  ];
}

// MsgEditDefiResponse defines the Msg/EditDefi response type.
message MsgEditDefiResponse {}

// MsgDefiDelegate defines a SDK message for performing a delegation of coins
// from a delegator to a defi.
message MsgDefiDelegate {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string                delegator_address = 1 [(gogoproto.moretags) = "yaml:\"delegator_address\""];
  string                defi_address = 2 [(gogoproto.moretags) = "yaml:\"defi_address\""];
  cosmos.base.v1beta1.Coin amount    = 3 [(gogoproto.nullable) = false];
}

// MsgDefiDelegateResponse defines the Msg/Delegate response type.
message MsgDefiDelegateResponse {}

// MsgDefiUndelegate defines a SDK message for performing an undelegation from a
// delegate and a defi.
message MsgDefiUndelegate {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string           delegator_address = 1 [(gogoproto.moretags) = "yaml:\"delegator_address\""];
  string           defi_address      = 2 [(gogoproto.moretags) = "yaml:\"defi_address\""];
  cosmos.base.v1beta1.Coin amount    = 3 [(gogoproto.nullable) = false];
}

// MsgDefiUndelegateResponse defines the Msg/Undelegate response type.
message MsgDefiUndelegateResponse {
  google.protobuf.Timestamp completion_time = 1 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
}

// MsgSetDefiWithdrawAddress sets the withdraw address for
// a delegator (or defi self-delegation).
message MsgSetDefiWithdrawAddress {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string delegator_address = 1 [(gogoproto.moretags) = "yaml:\"delegator_address\""];
  string withdraw_address  = 2 [(gogoproto.moretags) = "yaml:\"withdraw_address\""];
}

// MsgSetDefiWithdrawAddressResponse defines the Msg/SetWithdrawAddress response type.
message MsgSetDefiWithdrawAddressResponse {}

// MsgWithdrawDefiDelegatorReward represents delegation withdrawal to a delegator
// from a single defi.
message MsgWithdrawDefiDelegatorReward {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string delegator_address = 1 [(gogoproto.moretags) = "yaml:\"delegator_address\""];
  string defi_address = 2 [(gogoproto.moretags) = "yaml:\"defi_address\""];
}

// MsgWithdrawDefiDelegatorRewardResponse defines the Msg/WithdrawDelegatorReward response type.
message MsgWithdrawDefiDelegatorRewardResponse {}

// MsgWithdrawDefiCommission withdraws the full commission to the defi
// address.
message MsgWithdrawDefiCommission {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string defi_address = 1 [(gogoproto.moretags) = "yaml:\"defi_address\""];
}

// MsgWithdrawDefiCommissionResponse defines the Msg/WithdrawDefiCommission response type.
message MsgWithdrawDefiCommissionResponse {}

// MsgFundDefiCommunityPool allows an account to directly
// fund the community pool.
message MsgFundDefiCommunityPool {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  repeated cosmos.base.v1beta1.Coin amount = 1
      [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
  string depositor = 2;
}

// MsgFundDefiCommunityPoolResponse defines the Msg/FundCommunityPool response type.
message MsgFundDefiCommunityPoolResponse {}
