// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: gauss/defi/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-sdk/codec/types"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/regen-network/cosmos-proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgCreateDefi defines a SDK message for creating a new defi.
type MsgCreateDefi struct {
	Description       Description                            `protobuf:"bytes,1,opt,name=description,proto3" json:"description"`
	MinSelfDelegation github_com_cosmos_cosmos_sdk_types.Int `protobuf:"bytes,2,opt,name=min_self_delegation,json=minSelfDelegation,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Int" json:"min_self_delegation" yaml:"min_self_delegation"`
	DelegatorAddress  string                                 `protobuf:"bytes,3,opt,name=delegator_address,json=delegatorAddress,proto3" json:"delegator_address,omitempty" yaml:"delegator_address"`
	DefiAddress       string                                 `protobuf:"bytes,4,opt,name=defi_address,json=defiAddress,proto3" json:"defi_address,omitempty" yaml:"defi_address"`
	Value             types.Coin                             `protobuf:"bytes,5,opt,name=value,proto3" json:"value"`
}

func (m *MsgCreateDefi) Reset()         { *m = MsgCreateDefi{} }
func (m *MsgCreateDefi) String() string { return proto.CompactTextString(m) }
func (*MsgCreateDefi) ProtoMessage()    {}
func (*MsgCreateDefi) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72bf8f25f9c8490, []int{0}
}
func (m *MsgCreateDefi) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateDefi) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateDefi.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateDefi) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateDefi.Merge(m, src)
}
func (m *MsgCreateDefi) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateDefi) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateDefi.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateDefi proto.InternalMessageInfo

// MsgCreateDefiResponse defines the Msg/CreateDefi response type.
type MsgCreateDefiResponse struct {
}

func (m *MsgCreateDefiResponse) Reset()         { *m = MsgCreateDefiResponse{} }
func (m *MsgCreateDefiResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateDefiResponse) ProtoMessage()    {}
func (*MsgCreateDefiResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72bf8f25f9c8490, []int{1}
}
func (m *MsgCreateDefiResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateDefiResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateDefiResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateDefiResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateDefiResponse.Merge(m, src)
}
func (m *MsgCreateDefiResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateDefiResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateDefiResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateDefiResponse proto.InternalMessageInfo

// MsgEditDefi defines a SDK message for editing an existing defi.
type MsgEditDefi struct {
	Description       Description                             `protobuf:"bytes,1,opt,name=description,proto3" json:"description"`
	DefiAddress       string                                  `protobuf:"bytes,2,opt,name=defi_address,json=defiAddress,proto3" json:"defi_address,omitempty" yaml:"address"`
	MinSelfDelegation *github_com_cosmos_cosmos_sdk_types.Int `protobuf:"bytes,3,opt,name=min_self_delegation,json=minSelfDelegation,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Int" json:"min_self_delegation,omitempty" yaml:"min_self_delegation"`
}

func (m *MsgEditDefi) Reset()         { *m = MsgEditDefi{} }
func (m *MsgEditDefi) String() string { return proto.CompactTextString(m) }
func (*MsgEditDefi) ProtoMessage()    {}
func (*MsgEditDefi) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72bf8f25f9c8490, []int{2}
}
func (m *MsgEditDefi) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgEditDefi) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgEditDefi.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgEditDefi) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEditDefi.Merge(m, src)
}
func (m *MsgEditDefi) XXX_Size() int {
	return m.Size()
}
func (m *MsgEditDefi) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEditDefi.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEditDefi proto.InternalMessageInfo

// MsgEditDefiResponse defines the Msg/EditDefi response type.
type MsgEditDefiResponse struct {
}

func (m *MsgEditDefiResponse) Reset()         { *m = MsgEditDefiResponse{} }
func (m *MsgEditDefiResponse) String() string { return proto.CompactTextString(m) }
func (*MsgEditDefiResponse) ProtoMessage()    {}
func (*MsgEditDefiResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72bf8f25f9c8490, []int{3}
}
func (m *MsgEditDefiResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgEditDefiResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgEditDefiResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgEditDefiResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEditDefiResponse.Merge(m, src)
}
func (m *MsgEditDefiResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgEditDefiResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEditDefiResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEditDefiResponse proto.InternalMessageInfo

// MsgDefiDelegate defines a SDK message for performing a delegation of coins
// from a delegator to a defi.
type MsgDefiDelegate struct {
	DelegatorAddress string     `protobuf:"bytes,1,opt,name=delegator_address,json=delegatorAddress,proto3" json:"delegator_address,omitempty" yaml:"delegator_address"`
	DefiAddress      string     `protobuf:"bytes,2,opt,name=defi_address,json=defiAddress,proto3" json:"defi_address,omitempty" yaml:"defi_address"`
	Amount           types.Coin `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount"`
}

func (m *MsgDefiDelegate) Reset()         { *m = MsgDefiDelegate{} }
func (m *MsgDefiDelegate) String() string { return proto.CompactTextString(m) }
func (*MsgDefiDelegate) ProtoMessage()    {}
func (*MsgDefiDelegate) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72bf8f25f9c8490, []int{4}
}
func (m *MsgDefiDelegate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDefiDelegate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDefiDelegate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDefiDelegate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDefiDelegate.Merge(m, src)
}
func (m *MsgDefiDelegate) XXX_Size() int {
	return m.Size()
}
func (m *MsgDefiDelegate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDefiDelegate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDefiDelegate proto.InternalMessageInfo

// MsgDefiDelegateResponse defines the Msg/Delegate response type.
type MsgDefiDelegateResponse struct {
}

func (m *MsgDefiDelegateResponse) Reset()         { *m = MsgDefiDelegateResponse{} }
func (m *MsgDefiDelegateResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDefiDelegateResponse) ProtoMessage()    {}
func (*MsgDefiDelegateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72bf8f25f9c8490, []int{5}
}
func (m *MsgDefiDelegateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDefiDelegateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDefiDelegateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDefiDelegateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDefiDelegateResponse.Merge(m, src)
}
func (m *MsgDefiDelegateResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDefiDelegateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDefiDelegateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDefiDelegateResponse proto.InternalMessageInfo

// MsgDefiUndelegate defines a SDK message for performing an undelegation from a
// delegate and a defi.
type MsgDefiUndelegate struct {
	DelegatorAddress string     `protobuf:"bytes,1,opt,name=delegator_address,json=delegatorAddress,proto3" json:"delegator_address,omitempty" yaml:"delegator_address"`
	DefiAddress      string     `protobuf:"bytes,2,opt,name=defi_address,json=defiAddress,proto3" json:"defi_address,omitempty" yaml:"defi_address"`
	Amount           types.Coin `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount"`
}

func (m *MsgDefiUndelegate) Reset()         { *m = MsgDefiUndelegate{} }
func (m *MsgDefiUndelegate) String() string { return proto.CompactTextString(m) }
func (*MsgDefiUndelegate) ProtoMessage()    {}
func (*MsgDefiUndelegate) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72bf8f25f9c8490, []int{6}
}
func (m *MsgDefiUndelegate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDefiUndelegate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDefiUndelegate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDefiUndelegate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDefiUndelegate.Merge(m, src)
}
func (m *MsgDefiUndelegate) XXX_Size() int {
	return m.Size()
}
func (m *MsgDefiUndelegate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDefiUndelegate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDefiUndelegate proto.InternalMessageInfo

// MsgDefiUndelegateResponse defines the Msg/Undelegate response type.
type MsgDefiUndelegateResponse struct {
	CompletionTime time.Time `protobuf:"bytes,1,opt,name=completion_time,json=completionTime,proto3,stdtime" json:"completion_time"`
}

func (m *MsgDefiUndelegateResponse) Reset()         { *m = MsgDefiUndelegateResponse{} }
func (m *MsgDefiUndelegateResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDefiUndelegateResponse) ProtoMessage()    {}
func (*MsgDefiUndelegateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72bf8f25f9c8490, []int{7}
}
func (m *MsgDefiUndelegateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDefiUndelegateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDefiUndelegateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDefiUndelegateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDefiUndelegateResponse.Merge(m, src)
}
func (m *MsgDefiUndelegateResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDefiUndelegateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDefiUndelegateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDefiUndelegateResponse proto.InternalMessageInfo

func (m *MsgDefiUndelegateResponse) GetCompletionTime() time.Time {
	if m != nil {
		return m.CompletionTime
	}
	return time.Time{}
}

// MsgSetDefiWithdrawAddress sets the withdraw address for
// a delegator (or defi self-delegation).
type MsgSetDefiWithdrawAddress struct {
	DelegatorAddress string `protobuf:"bytes,1,opt,name=delegator_address,json=delegatorAddress,proto3" json:"delegator_address,omitempty" yaml:"delegator_address"`
	WithdrawAddress  string `protobuf:"bytes,2,opt,name=withdraw_address,json=withdrawAddress,proto3" json:"withdraw_address,omitempty" yaml:"withdraw_address"`
}

func (m *MsgSetDefiWithdrawAddress) Reset()         { *m = MsgSetDefiWithdrawAddress{} }
func (m *MsgSetDefiWithdrawAddress) String() string { return proto.CompactTextString(m) }
func (*MsgSetDefiWithdrawAddress) ProtoMessage()    {}
func (*MsgSetDefiWithdrawAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72bf8f25f9c8490, []int{8}
}
func (m *MsgSetDefiWithdrawAddress) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetDefiWithdrawAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetDefiWithdrawAddress.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetDefiWithdrawAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetDefiWithdrawAddress.Merge(m, src)
}
func (m *MsgSetDefiWithdrawAddress) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetDefiWithdrawAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetDefiWithdrawAddress.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetDefiWithdrawAddress proto.InternalMessageInfo

// MsgSetDefiWithdrawAddressResponse defines the Msg/SetWithdrawAddress response type.
type MsgSetDefiWithdrawAddressResponse struct {
}

func (m *MsgSetDefiWithdrawAddressResponse) Reset()         { *m = MsgSetDefiWithdrawAddressResponse{} }
func (m *MsgSetDefiWithdrawAddressResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetDefiWithdrawAddressResponse) ProtoMessage()    {}
func (*MsgSetDefiWithdrawAddressResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72bf8f25f9c8490, []int{9}
}
func (m *MsgSetDefiWithdrawAddressResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetDefiWithdrawAddressResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetDefiWithdrawAddressResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetDefiWithdrawAddressResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetDefiWithdrawAddressResponse.Merge(m, src)
}
func (m *MsgSetDefiWithdrawAddressResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetDefiWithdrawAddressResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetDefiWithdrawAddressResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetDefiWithdrawAddressResponse proto.InternalMessageInfo

// MsgWithdrawDefiDelegatorReward represents delegation withdrawal to a delegator
// from a single defi.
type MsgWithdrawDefiDelegatorReward struct {
	DelegatorAddress string `protobuf:"bytes,1,opt,name=delegator_address,json=delegatorAddress,proto3" json:"delegator_address,omitempty" yaml:"delegator_address"`
	DefiAddress      string `protobuf:"bytes,2,opt,name=defi_address,json=defiAddress,proto3" json:"defi_address,omitempty" yaml:"defi_address"`
}

func (m *MsgWithdrawDefiDelegatorReward) Reset()         { *m = MsgWithdrawDefiDelegatorReward{} }
func (m *MsgWithdrawDefiDelegatorReward) String() string { return proto.CompactTextString(m) }
func (*MsgWithdrawDefiDelegatorReward) ProtoMessage()    {}
func (*MsgWithdrawDefiDelegatorReward) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72bf8f25f9c8490, []int{10}
}
func (m *MsgWithdrawDefiDelegatorReward) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgWithdrawDefiDelegatorReward) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgWithdrawDefiDelegatorReward.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgWithdrawDefiDelegatorReward) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgWithdrawDefiDelegatorReward.Merge(m, src)
}
func (m *MsgWithdrawDefiDelegatorReward) XXX_Size() int {
	return m.Size()
}
func (m *MsgWithdrawDefiDelegatorReward) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgWithdrawDefiDelegatorReward.DiscardUnknown(m)
}

var xxx_messageInfo_MsgWithdrawDefiDelegatorReward proto.InternalMessageInfo

// MsgWithdrawDefiDelegatorRewardResponse defines the Msg/WithdrawDelegatorReward response type.
type MsgWithdrawDefiDelegatorRewardResponse struct {
}

func (m *MsgWithdrawDefiDelegatorRewardResponse) Reset() {
	*m = MsgWithdrawDefiDelegatorRewardResponse{}
}
func (m *MsgWithdrawDefiDelegatorRewardResponse) String() string { return proto.CompactTextString(m) }
func (*MsgWithdrawDefiDelegatorRewardResponse) ProtoMessage()    {}
func (*MsgWithdrawDefiDelegatorRewardResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72bf8f25f9c8490, []int{11}
}
func (m *MsgWithdrawDefiDelegatorRewardResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgWithdrawDefiDelegatorRewardResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgWithdrawDefiDelegatorRewardResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgWithdrawDefiDelegatorRewardResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgWithdrawDefiDelegatorRewardResponse.Merge(m, src)
}
func (m *MsgWithdrawDefiDelegatorRewardResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgWithdrawDefiDelegatorRewardResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgWithdrawDefiDelegatorRewardResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgWithdrawDefiDelegatorRewardResponse proto.InternalMessageInfo

// MsgWithdrawDefiCommission withdraws the full commission to the defi
// address.
type MsgWithdrawDefiCommission struct {
	DefiAddress string `protobuf:"bytes,1,opt,name=defi_address,json=defiAddress,proto3" json:"defi_address,omitempty" yaml:"defi_address"`
}

func (m *MsgWithdrawDefiCommission) Reset()         { *m = MsgWithdrawDefiCommission{} }
func (m *MsgWithdrawDefiCommission) String() string { return proto.CompactTextString(m) }
func (*MsgWithdrawDefiCommission) ProtoMessage()    {}
func (*MsgWithdrawDefiCommission) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72bf8f25f9c8490, []int{12}
}
func (m *MsgWithdrawDefiCommission) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgWithdrawDefiCommission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgWithdrawDefiCommission.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgWithdrawDefiCommission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgWithdrawDefiCommission.Merge(m, src)
}
func (m *MsgWithdrawDefiCommission) XXX_Size() int {
	return m.Size()
}
func (m *MsgWithdrawDefiCommission) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgWithdrawDefiCommission.DiscardUnknown(m)
}

var xxx_messageInfo_MsgWithdrawDefiCommission proto.InternalMessageInfo

// MsgWithdrawDefiCommissionResponse defines the Msg/WithdrawDefiCommission response type.
type MsgWithdrawDefiCommissionResponse struct {
}

func (m *MsgWithdrawDefiCommissionResponse) Reset()         { *m = MsgWithdrawDefiCommissionResponse{} }
func (m *MsgWithdrawDefiCommissionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgWithdrawDefiCommissionResponse) ProtoMessage()    {}
func (*MsgWithdrawDefiCommissionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72bf8f25f9c8490, []int{13}
}
func (m *MsgWithdrawDefiCommissionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgWithdrawDefiCommissionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgWithdrawDefiCommissionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgWithdrawDefiCommissionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgWithdrawDefiCommissionResponse.Merge(m, src)
}
func (m *MsgWithdrawDefiCommissionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgWithdrawDefiCommissionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgWithdrawDefiCommissionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgWithdrawDefiCommissionResponse proto.InternalMessageInfo

// MsgFundDefiCommunityPool allows an account to directly
// fund the community pool.
type MsgFundDefiCommunityPool struct {
	Amount    github_com_cosmos_cosmos_sdk_types.Coins `protobuf:"bytes,1,rep,name=amount,proto3,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"amount"`
	Depositor string                                   `protobuf:"bytes,2,opt,name=depositor,proto3" json:"depositor,omitempty"`
}

func (m *MsgFundDefiCommunityPool) Reset()         { *m = MsgFundDefiCommunityPool{} }
func (m *MsgFundDefiCommunityPool) String() string { return proto.CompactTextString(m) }
func (*MsgFundDefiCommunityPool) ProtoMessage()    {}
func (*MsgFundDefiCommunityPool) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72bf8f25f9c8490, []int{14}
}
func (m *MsgFundDefiCommunityPool) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgFundDefiCommunityPool) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgFundDefiCommunityPool.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgFundDefiCommunityPool) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgFundDefiCommunityPool.Merge(m, src)
}
func (m *MsgFundDefiCommunityPool) XXX_Size() int {
	return m.Size()
}
func (m *MsgFundDefiCommunityPool) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgFundDefiCommunityPool.DiscardUnknown(m)
}

var xxx_messageInfo_MsgFundDefiCommunityPool proto.InternalMessageInfo

// MsgFundDefiCommunityPoolResponse defines the Msg/FundCommunityPool response type.
type MsgFundDefiCommunityPoolResponse struct {
}

func (m *MsgFundDefiCommunityPoolResponse) Reset()         { *m = MsgFundDefiCommunityPoolResponse{} }
func (m *MsgFundDefiCommunityPoolResponse) String() string { return proto.CompactTextString(m) }
func (*MsgFundDefiCommunityPoolResponse) ProtoMessage()    {}
func (*MsgFundDefiCommunityPoolResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72bf8f25f9c8490, []int{15}
}
func (m *MsgFundDefiCommunityPoolResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgFundDefiCommunityPoolResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgFundDefiCommunityPoolResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgFundDefiCommunityPoolResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgFundDefiCommunityPoolResponse.Merge(m, src)
}
func (m *MsgFundDefiCommunityPoolResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgFundDefiCommunityPoolResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgFundDefiCommunityPoolResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgFundDefiCommunityPoolResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreateDefi)(nil), "gauss.defi.MsgCreateDefi")
	proto.RegisterType((*MsgCreateDefiResponse)(nil), "gauss.defi.MsgCreateDefiResponse")
	proto.RegisterType((*MsgEditDefi)(nil), "gauss.defi.MsgEditDefi")
	proto.RegisterType((*MsgEditDefiResponse)(nil), "gauss.defi.MsgEditDefiResponse")
	proto.RegisterType((*MsgDefiDelegate)(nil), "gauss.defi.MsgDefiDelegate")
	proto.RegisterType((*MsgDefiDelegateResponse)(nil), "gauss.defi.MsgDefiDelegateResponse")
	proto.RegisterType((*MsgDefiUndelegate)(nil), "gauss.defi.MsgDefiUndelegate")
	proto.RegisterType((*MsgDefiUndelegateResponse)(nil), "gauss.defi.MsgDefiUndelegateResponse")
	proto.RegisterType((*MsgSetDefiWithdrawAddress)(nil), "gauss.defi.MsgSetDefiWithdrawAddress")
	proto.RegisterType((*MsgSetDefiWithdrawAddressResponse)(nil), "gauss.defi.MsgSetDefiWithdrawAddressResponse")
	proto.RegisterType((*MsgWithdrawDefiDelegatorReward)(nil), "gauss.defi.MsgWithdrawDefiDelegatorReward")
	proto.RegisterType((*MsgWithdrawDefiDelegatorRewardResponse)(nil), "gauss.defi.MsgWithdrawDefiDelegatorRewardResponse")
	proto.RegisterType((*MsgWithdrawDefiCommission)(nil), "gauss.defi.MsgWithdrawDefiCommission")
	proto.RegisterType((*MsgWithdrawDefiCommissionResponse)(nil), "gauss.defi.MsgWithdrawDefiCommissionResponse")
	proto.RegisterType((*MsgFundDefiCommunityPool)(nil), "gauss.defi.MsgFundDefiCommunityPool")
	proto.RegisterType((*MsgFundDefiCommunityPoolResponse)(nil), "gauss.defi.MsgFundDefiCommunityPoolResponse")
}

func init() { proto.RegisterFile("gauss/defi/tx.proto", fileDescriptor_e72bf8f25f9c8490) }

var fileDescriptor_e72bf8f25f9c8490 = []byte{
	// 933 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x57, 0xcf, 0x6f, 0xdc, 0x44,
	0x14, 0x5e, 0x27, 0x4d, 0x95, 0xbe, 0x40, 0xd3, 0x38, 0x84, 0xdd, 0x75, 0x8b, 0x9d, 0xba, 0xb4,
	0x8a, 0x10, 0xb5, 0x69, 0xa0, 0x42, 0xca, 0x05, 0x48, 0x42, 0x45, 0x51, 0x57, 0x42, 0x0e, 0x08,
	0x89, 0xcb, 0xca, 0xbb, 0x9e, 0x75, 0xa7, 0xd8, 0x9e, 0x95, 0x67, 0x36, 0xc9, 0x4a, 0xfc, 0x01,
	0x70, 0xeb, 0x89, 0x73, 0x6f, 0x48, 0xdc, 0xb8, 0xf1, 0x27, 0xf4, 0xd8, 0x23, 0x02, 0xb1, 0x41,
	0xc9, 0x85, 0xf3, 0xde, 0xb8, 0xa1, 0xf1, 0xd8, 0x63, 0xaf, 0xe3, 0x5d, 0x2d, 0x28, 0x48, 0xa8,
	0x97, 0xcd, 0xee, 0xfb, 0xbe, 0x79, 0xf3, 0xbe, 0xf7, 0xcb, 0x0e, 0xac, 0xfb, 0xee, 0x80, 0x52,
	0xdb, 0x43, 0x3d, 0x6c, 0xb3, 0x63, 0xab, 0x1f, 0x13, 0x46, 0x54, 0x48, 0x8c, 0x16, 0x37, 0x6a,
	0x4d, 0x9f, 0x10, 0x3f, 0x40, 0x76, 0x82, 0x74, 0x06, 0x3d, 0xdb, 0x8d, 0x86, 0x82, 0xa6, 0x19,
	0x65, 0x88, 0xe1, 0x10, 0x51, 0xe6, 0x86, 0xfd, 0x94, 0xf0, 0x9a, 0x4f, 0x7c, 0x92, 0x7c, 0xb5,
	0xf9, 0xb7, 0xd4, 0xda, 0xec, 0x12, 0x1a, 0x12, 0xda, 0x16, 0x80, 0xf8, 0x91, 0x42, 0xba, 0xf8,
	0x65, 0x77, 0x5c, 0x8a, 0xec, 0xc3, 0x7b, 0x1d, 0xc4, 0xdc, 0x7b, 0x76, 0x97, 0xe0, 0x28, 0xc5,
	0x37, 0x0a, 0xd1, 0xf2, 0x0f, 0x61, 0x36, 0xbf, 0x5f, 0x84, 0x57, 0x5b, 0xd4, 0xdf, 0x8b, 0x91,
	0xcb, 0xd0, 0x3e, 0xea, 0x61, 0xf5, 0x03, 0x58, 0xf1, 0x10, 0xed, 0xc6, 0xb8, 0xcf, 0x30, 0x89,
	0x1a, 0xca, 0xa6, 0xb2, 0xb5, 0xb2, 0x5d, 0xb7, 0x72, 0x5d, 0xd6, 0x7e, 0x0e, 0xef, 0x5e, 0x7a,
	0x3e, 0x32, 0x6a, 0x4e, 0xf1, 0x84, 0xfa, 0x0d, 0xac, 0x87, 0x38, 0x6a, 0x53, 0x14, 0xf4, 0xda,
	0x1e, 0x0a, 0x90, 0xef, 0x26, 0x8e, 0x16, 0x36, 0x95, 0xad, 0x2b, 0xbb, 0x8f, 0x38, 0xff, 0xd7,
	0x91, 0x71, 0xc7, 0xc7, 0xec, 0xf1, 0xa0, 0x63, 0x75, 0x49, 0x98, 0xea, 0x48, 0xff, 0xdc, 0xa5,
	0xde, 0xd7, 0x36, 0x1b, 0xf6, 0x11, 0xb5, 0x1e, 0x46, 0x6c, 0x3c, 0x32, 0xb4, 0xa1, 0x1b, 0x06,
	0x3b, 0x66, 0x85, 0x4b, 0xd3, 0x59, 0x0b, 0x71, 0x74, 0x80, 0x82, 0xde, 0xbe, 0xb4, 0xa9, 0x0f,
	0x61, 0x2d, 0x65, 0x90, 0xb8, 0xed, 0x7a, 0x5e, 0x8c, 0x28, 0x6d, 0x2c, 0x26, 0x77, 0xdf, 0x18,
	0x8f, 0x8c, 0x86, 0xf0, 0x76, 0x8e, 0x62, 0x3a, 0xd7, 0xa4, 0xed, 0x23, 0x61, 0x52, 0x77, 0xe0,
	0x15, 0xae, 0x57, 0x7a, 0xb9, 0x94, 0x78, 0xa9, 0x8f, 0x47, 0xc6, 0x7a, 0xe6, 0x25, 0x47, 0x4d,
	0x9e, 0x84, 0x1e, 0xce, 0xce, 0xde, 0x87, 0xa5, 0x43, 0x37, 0x18, 0xa0, 0xc6, 0x52, 0x92, 0xbf,
	0xa6, 0x95, 0x16, 0x8b, 0x97, 0xc7, 0x4a, 0xcb, 0x63, 0xed, 0x11, 0x9c, 0x65, 0x50, 0xb0, 0x77,
	0x96, 0xbf, 0x7d, 0x66, 0xd4, 0xfe, 0x7c, 0x66, 0xd4, 0xcc, 0x3a, 0x6c, 0x4c, 0xd4, 0xc5, 0x41,
	0xb4, 0x4f, 0x22, 0x8a, 0xcc, 0xef, 0x16, 0x60, 0xa5, 0x45, 0xfd, 0x8f, 0x3d, 0xcc, 0x2e, 0xa6,
	0x5e, 0xf7, 0x4b, 0x32, 0x45, 0xa1, 0xd4, 0xf1, 0xc8, 0xb8, 0x2a, 0x64, 0x56, 0x2b, 0x3c, 0xae,
	0x2e, 0xb3, 0x48, 0xf5, 0x27, 0xff, 0x61, 0x89, 0x0b, 0x49, 0xda, 0x80, 0xf5, 0x42, 0x2a, 0x64,
	0x8a, 0x7e, 0x53, 0x60, 0xb5, 0x45, 0x7d, 0x6e, 0x4b, 0x8f, 0xa1, 0xea, 0xbe, 0x50, 0x2e, 0xa4,
	0x2f, 0x16, 0xfe, 0x41, 0x5f, 0xbc, 0x0f, 0x97, 0xdd, 0x90, 0x0c, 0x22, 0x96, 0x24, 0x6a, 0x8e,
	0xc6, 0x48, 0xe9, 0x05, 0xd1, 0x4d, 0xa8, 0x97, 0xc4, 0x49, 0xe1, 0xbf, 0x2b, 0xb0, 0x96, 0x62,
	0x5f, 0x44, 0xde, 0xcb, 0x27, 0xfd, 0x09, 0x34, 0xcf, 0xc9, 0xcb, 0xc4, 0xab, 0x2d, 0x58, 0xed,
	0x92, 0xb0, 0x1f, 0x20, 0xde, 0x24, 0x6d, 0xbe, 0x50, 0xd3, 0x61, 0xd0, 0x2c, 0xb1, 0x6d, 0xad,
	0x6c, 0xdb, 0x5a, 0x9f, 0x67, 0xdb, 0x76, 0x77, 0x99, 0xdf, 0xf4, 0xf4, 0xc4, 0x50, 0x9c, 0xab,
	0xf9, 0x61, 0x0e, 0x9b, 0x3f, 0x2b, 0xc9, 0x65, 0x07, 0x28, 0xe9, 0xad, 0x2f, 0x31, 0x7b, 0xec,
	0xc5, 0xee, 0x51, 0x26, 0xe6, 0x02, 0x73, 0xfa, 0x00, 0xae, 0x1d, 0xa5, 0xde, 0x4b, 0x79, 0xbd,
	0x3e, 0x1e, 0x19, 0x75, 0xe1, 0xa9, 0xcc, 0x30, 0x9d, 0xd5, 0xa3, 0xc9, 0x90, 0x0a, 0x69, 0xba,
	0x05, 0x37, 0xa7, 0x46, 0x2e, 0x7b, 0xe5, 0x27, 0x05, 0xf4, 0x16, 0xf5, 0x33, 0xb8, 0xd0, 0x4f,
	0x24, 0x76, 0xd0, 0x91, 0x1b, 0x7b, 0xff, 0x93, 0xc6, 0x29, 0x08, 0xdb, 0x82, 0x3b, 0xb3, 0x43,
	0x96, 0xea, 0xdc, 0xa4, 0x78, 0x45, 0xe6, 0x1e, 0x09, 0x43, 0x4c, 0x29, 0xdf, 0x78, 0xe5, 0x60,
	0x94, 0x7f, 0x15, 0x8c, 0xc8, 0x72, 0xf5, 0x15, 0x32, 0x8e, 0x1f, 0x14, 0x68, 0xb4, 0xa8, 0xff,
	0x60, 0x10, 0x79, 0x19, 0x63, 0x10, 0x61, 0x36, 0xfc, 0x8c, 0x90, 0x40, 0xed, 0xca, 0x89, 0x50,
	0x36, 0x17, 0x67, 0x4f, 0xc4, 0x3b, 0xbc, 0x4f, 0x7f, 0x3c, 0x31, 0xb6, 0xe6, 0x58, 0xaa, 0xfc,
	0x00, 0xcd, 0xa6, 0x47, 0xbd, 0x01, 0x57, 0x3c, 0xd4, 0x27, 0x14, 0x33, 0x12, 0x8b, 0xb4, 0x3b,
	0xb9, 0xa1, 0x20, 0xc7, 0x84, 0xcd, 0x69, 0x81, 0x66, 0x6a, 0xb6, 0xff, 0x5a, 0x82, 0xc5, 0x16,
	0xf5, 0xd5, 0x4f, 0x01, 0x0a, 0x6f, 0x0c, 0xcd, 0xe2, 0xc3, 0x66, 0xe2, 0xa1, 0xa5, 0xdd, 0x9c,
	0x0a, 0xc9, 0xb1, 0xdd, 0x87, 0x65, 0xf9, 0x2c, 0xab, 0x97, 0xe8, 0x19, 0xa0, 0x19, 0x53, 0x00,
	0xe9, 0xe5, 0x11, 0x2c, 0xcb, 0x55, 0x7f, 0xbd, 0x44, 0x2e, 0xae, 0x4a, 0xed, 0xd6, 0x0c, 0x50,
	0x7a, 0x73, 0x00, 0x0a, 0xfb, 0xf3, 0x8d, 0x8a, 0x23, 0x39, 0xac, 0xdd, 0x9e, 0x09, 0x4b, 0x9f,
	0x4f, 0x40, 0x3d, 0x40, 0xac, 0xbc, 0x47, 0xca, 0x87, 0xab, 0x87, 0x56, 0xbb, 0x3b, 0x17, 0x4d,
	0xde, 0x35, 0x84, 0x7a, 0xde, 0x97, 0x93, 0x33, 0xfd, 0x56, 0xc9, 0xd3, 0x8c, 0x61, 0xd2, 0xb6,
	0xe7, 0xe7, 0xca, 0xab, 0x23, 0x78, 0x7d, 0xca, 0xd4, 0xdd, 0x9e, 0xe1, 0x2d, 0xa7, 0x9d, 0x93,
	0x3a, 0x7b, 0xc0, 0x54, 0x1f, 0xd6, 0x78, 0xcf, 0x4e, 0x0e, 0xd6, 0x9b, 0x25, 0x1f, 0x95, 0x5d,
	0xad, 0xbd, 0x3d, 0x0f, 0x2b, 0xbb, 0x68, 0xf7, 0xc3, 0xe7, 0xa7, 0xba, 0xf2, 0xe2, 0x54, 0x57,
	0xfe, 0x38, 0xd5, 0x95, 0xa7, 0x67, 0x7a, 0xed, 0xc5, 0x99, 0x5e, 0xfb, 0xe5, 0x4c, 0xaf, 0x7d,
	0x55, 0x7c, 0xd1, 0x11, 0x6f, 0xd9, 0xe2, 0xf3, 0xf0, 0x3d, 0xfb, 0x38, 0xfd, 0xf7, 0x80, 0xcf,
	0x65, 0xe7, 0x72, 0xf2, 0xfc, 0x79, 0xf7, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd7, 0xa3, 0xfd,
	0x32, 0x39, 0x0c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// CreateDefi defines a method for creating a new defi.
	CreateDefi(ctx context.Context, in *MsgCreateDefi, opts ...grpc.CallOption) (*MsgCreateDefiResponse, error)
	// EditDefi defines a method for editing an existing defi.
	EditDefi(ctx context.Context, in *MsgEditDefi, opts ...grpc.CallOption) (*MsgEditDefiResponse, error)
	// from a delegator to a defi.
	Delegate(ctx context.Context, in *MsgDefiDelegate, opts ...grpc.CallOption) (*MsgDefiDelegateResponse, error)
	// Undelegate defines a method for performing an undelegation from a
	// delegate and a defi.
	Undelegate(ctx context.Context, in *MsgDefiUndelegate, opts ...grpc.CallOption) (*MsgDefiUndelegateResponse, error)
	// SetWithdrawAddress defines a method to change the withdraw address
	// for a delegator (or defi self-delegation).
	SetWithdrawAddress(ctx context.Context, in *MsgSetDefiWithdrawAddress, opts ...grpc.CallOption) (*MsgSetDefiWithdrawAddressResponse, error)
	// WithdrawDelegatorReward defines a method to withdraw rewards of delegator
	// from a single defi.
	WithdrawDelegatorReward(ctx context.Context, in *MsgWithdrawDefiDelegatorReward, opts ...grpc.CallOption) (*MsgWithdrawDefiDelegatorRewardResponse, error)
	// WithdrawDefiCommission defines a method to withdraw the
	// full commission to the defi address.
	WithdrawDefiCommission(ctx context.Context, in *MsgWithdrawDefiCommission, opts ...grpc.CallOption) (*MsgWithdrawDefiCommissionResponse, error)
	// FundCommunityPool defines a method to allow an account to directly
	// fund the community pool.
	FundCommunityPool(ctx context.Context, in *MsgFundDefiCommunityPool, opts ...grpc.CallOption) (*MsgFundDefiCommunityPoolResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateDefi(ctx context.Context, in *MsgCreateDefi, opts ...grpc.CallOption) (*MsgCreateDefiResponse, error) {
	out := new(MsgCreateDefiResponse)
	err := c.cc.Invoke(ctx, "/gauss.defi.Msg/CreateDefi", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) EditDefi(ctx context.Context, in *MsgEditDefi, opts ...grpc.CallOption) (*MsgEditDefiResponse, error) {
	out := new(MsgEditDefiResponse)
	err := c.cc.Invoke(ctx, "/gauss.defi.Msg/EditDefi", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Delegate(ctx context.Context, in *MsgDefiDelegate, opts ...grpc.CallOption) (*MsgDefiDelegateResponse, error) {
	out := new(MsgDefiDelegateResponse)
	err := c.cc.Invoke(ctx, "/gauss.defi.Msg/Delegate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Undelegate(ctx context.Context, in *MsgDefiUndelegate, opts ...grpc.CallOption) (*MsgDefiUndelegateResponse, error) {
	out := new(MsgDefiUndelegateResponse)
	err := c.cc.Invoke(ctx, "/gauss.defi.Msg/Undelegate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetWithdrawAddress(ctx context.Context, in *MsgSetDefiWithdrawAddress, opts ...grpc.CallOption) (*MsgSetDefiWithdrawAddressResponse, error) {
	out := new(MsgSetDefiWithdrawAddressResponse)
	err := c.cc.Invoke(ctx, "/gauss.defi.Msg/SetWithdrawAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) WithdrawDelegatorReward(ctx context.Context, in *MsgWithdrawDefiDelegatorReward, opts ...grpc.CallOption) (*MsgWithdrawDefiDelegatorRewardResponse, error) {
	out := new(MsgWithdrawDefiDelegatorRewardResponse)
	err := c.cc.Invoke(ctx, "/gauss.defi.Msg/WithdrawDelegatorReward", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) WithdrawDefiCommission(ctx context.Context, in *MsgWithdrawDefiCommission, opts ...grpc.CallOption) (*MsgWithdrawDefiCommissionResponse, error) {
	out := new(MsgWithdrawDefiCommissionResponse)
	err := c.cc.Invoke(ctx, "/gauss.defi.Msg/WithdrawDefiCommission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) FundCommunityPool(ctx context.Context, in *MsgFundDefiCommunityPool, opts ...grpc.CallOption) (*MsgFundDefiCommunityPoolResponse, error) {
	out := new(MsgFundDefiCommunityPoolResponse)
	err := c.cc.Invoke(ctx, "/gauss.defi.Msg/FundCommunityPool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// CreateDefi defines a method for creating a new defi.
	CreateDefi(context.Context, *MsgCreateDefi) (*MsgCreateDefiResponse, error)
	// EditDefi defines a method for editing an existing defi.
	EditDefi(context.Context, *MsgEditDefi) (*MsgEditDefiResponse, error)
	// from a delegator to a defi.
	Delegate(context.Context, *MsgDefiDelegate) (*MsgDefiDelegateResponse, error)
	// Undelegate defines a method for performing an undelegation from a
	// delegate and a defi.
	Undelegate(context.Context, *MsgDefiUndelegate) (*MsgDefiUndelegateResponse, error)
	// SetWithdrawAddress defines a method to change the withdraw address
	// for a delegator (or defi self-delegation).
	SetWithdrawAddress(context.Context, *MsgSetDefiWithdrawAddress) (*MsgSetDefiWithdrawAddressResponse, error)
	// WithdrawDelegatorReward defines a method to withdraw rewards of delegator
	// from a single defi.
	WithdrawDelegatorReward(context.Context, *MsgWithdrawDefiDelegatorReward) (*MsgWithdrawDefiDelegatorRewardResponse, error)
	// WithdrawDefiCommission defines a method to withdraw the
	// full commission to the defi address.
	WithdrawDefiCommission(context.Context, *MsgWithdrawDefiCommission) (*MsgWithdrawDefiCommissionResponse, error)
	// FundCommunityPool defines a method to allow an account to directly
	// fund the community pool.
	FundCommunityPool(context.Context, *MsgFundDefiCommunityPool) (*MsgFundDefiCommunityPoolResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateDefi(ctx context.Context, req *MsgCreateDefi) (*MsgCreateDefiResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDefi not implemented")
}
func (*UnimplementedMsgServer) EditDefi(ctx context.Context, req *MsgEditDefi) (*MsgEditDefiResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditDefi not implemented")
}
func (*UnimplementedMsgServer) Delegate(ctx context.Context, req *MsgDefiDelegate) (*MsgDefiDelegateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delegate not implemented")
}
func (*UnimplementedMsgServer) Undelegate(ctx context.Context, req *MsgDefiUndelegate) (*MsgDefiUndelegateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Undelegate not implemented")
}
func (*UnimplementedMsgServer) SetWithdrawAddress(ctx context.Context, req *MsgSetDefiWithdrawAddress) (*MsgSetDefiWithdrawAddressResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetWithdrawAddress not implemented")
}
func (*UnimplementedMsgServer) WithdrawDelegatorReward(ctx context.Context, req *MsgWithdrawDefiDelegatorReward) (*MsgWithdrawDefiDelegatorRewardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WithdrawDelegatorReward not implemented")
}
func (*UnimplementedMsgServer) WithdrawDefiCommission(ctx context.Context, req *MsgWithdrawDefiCommission) (*MsgWithdrawDefiCommissionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WithdrawDefiCommission not implemented")
}
func (*UnimplementedMsgServer) FundCommunityPool(ctx context.Context, req *MsgFundDefiCommunityPool) (*MsgFundDefiCommunityPoolResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FundCommunityPool not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateDefi_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateDefi)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateDefi(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gauss.defi.Msg/CreateDefi",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateDefi(ctx, req.(*MsgCreateDefi))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_EditDefi_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgEditDefi)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).EditDefi(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gauss.defi.Msg/EditDefi",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).EditDefi(ctx, req.(*MsgEditDefi))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Delegate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDefiDelegate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Delegate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gauss.defi.Msg/Delegate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Delegate(ctx, req.(*MsgDefiDelegate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Undelegate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDefiUndelegate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Undelegate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gauss.defi.Msg/Undelegate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Undelegate(ctx, req.(*MsgDefiUndelegate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetWithdrawAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetDefiWithdrawAddress)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetWithdrawAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gauss.defi.Msg/SetWithdrawAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetWithdrawAddress(ctx, req.(*MsgSetDefiWithdrawAddress))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_WithdrawDelegatorReward_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgWithdrawDefiDelegatorReward)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).WithdrawDelegatorReward(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gauss.defi.Msg/WithdrawDelegatorReward",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).WithdrawDelegatorReward(ctx, req.(*MsgWithdrawDefiDelegatorReward))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_WithdrawDefiCommission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgWithdrawDefiCommission)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).WithdrawDefiCommission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gauss.defi.Msg/WithdrawDefiCommission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).WithdrawDefiCommission(ctx, req.(*MsgWithdrawDefiCommission))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_FundCommunityPool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgFundDefiCommunityPool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).FundCommunityPool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gauss.defi.Msg/FundCommunityPool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).FundCommunityPool(ctx, req.(*MsgFundDefiCommunityPool))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gauss.defi.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateDefi",
			Handler:    _Msg_CreateDefi_Handler,
		},
		{
			MethodName: "EditDefi",
			Handler:    _Msg_EditDefi_Handler,
		},
		{
			MethodName: "Delegate",
			Handler:    _Msg_Delegate_Handler,
		},
		{
			MethodName: "Undelegate",
			Handler:    _Msg_Undelegate_Handler,
		},
		{
			MethodName: "SetWithdrawAddress",
			Handler:    _Msg_SetWithdrawAddress_Handler,
		},
		{
			MethodName: "WithdrawDelegatorReward",
			Handler:    _Msg_WithdrawDelegatorReward_Handler,
		},
		{
			MethodName: "WithdrawDefiCommission",
			Handler:    _Msg_WithdrawDefiCommission_Handler,
		},
		{
			MethodName: "FundCommunityPool",
			Handler:    _Msg_FundCommunityPool_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gauss/defi/tx.proto",
}

func (m *MsgCreateDefi) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateDefi) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateDefi) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Value.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x2a
	if len(m.DefiAddress) > 0 {
		i -= len(m.DefiAddress)
		copy(dAtA[i:], m.DefiAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DefiAddress)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.DelegatorAddress) > 0 {
		i -= len(m.DelegatorAddress)
		copy(dAtA[i:], m.DelegatorAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DelegatorAddress)))
		i--
		dAtA[i] = 0x1a
	}
	{
		size := m.MinSelfDelegation.Size()
		i -= size
		if _, err := m.MinSelfDelegation.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	{
		size, err := m.Description.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *MsgCreateDefiResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateDefiResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateDefiResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgEditDefi) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgEditDefi) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgEditDefi) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.MinSelfDelegation != nil {
		{
			size := m.MinSelfDelegation.Size()
			i -= size
			if _, err := m.MinSelfDelegation.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.DefiAddress) > 0 {
		i -= len(m.DefiAddress)
		copy(dAtA[i:], m.DefiAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DefiAddress)))
		i--
		dAtA[i] = 0x12
	}
	{
		size, err := m.Description.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *MsgEditDefiResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgEditDefiResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgEditDefiResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDefiDelegate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDefiDelegate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDefiDelegate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Amount.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	if len(m.DefiAddress) > 0 {
		i -= len(m.DefiAddress)
		copy(dAtA[i:], m.DefiAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DefiAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.DelegatorAddress) > 0 {
		i -= len(m.DelegatorAddress)
		copy(dAtA[i:], m.DelegatorAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DelegatorAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDefiDelegateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDefiDelegateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDefiDelegateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDefiUndelegate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDefiUndelegate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDefiUndelegate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Amount.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	if len(m.DefiAddress) > 0 {
		i -= len(m.DefiAddress)
		copy(dAtA[i:], m.DefiAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DefiAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.DelegatorAddress) > 0 {
		i -= len(m.DelegatorAddress)
		copy(dAtA[i:], m.DelegatorAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DelegatorAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDefiUndelegateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDefiUndelegateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDefiUndelegateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	n6, err6 := github_com_gogo_protobuf_types.StdTimeMarshalTo(m.CompletionTime, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(m.CompletionTime):])
	if err6 != nil {
		return 0, err6
	}
	i -= n6
	i = encodeVarintTx(dAtA, i, uint64(n6))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *MsgSetDefiWithdrawAddress) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetDefiWithdrawAddress) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetDefiWithdrawAddress) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.WithdrawAddress) > 0 {
		i -= len(m.WithdrawAddress)
		copy(dAtA[i:], m.WithdrawAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.WithdrawAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.DelegatorAddress) > 0 {
		i -= len(m.DelegatorAddress)
		copy(dAtA[i:], m.DelegatorAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DelegatorAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetDefiWithdrawAddressResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetDefiWithdrawAddressResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetDefiWithdrawAddressResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgWithdrawDefiDelegatorReward) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgWithdrawDefiDelegatorReward) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgWithdrawDefiDelegatorReward) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.DefiAddress) > 0 {
		i -= len(m.DefiAddress)
		copy(dAtA[i:], m.DefiAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DefiAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.DelegatorAddress) > 0 {
		i -= len(m.DelegatorAddress)
		copy(dAtA[i:], m.DelegatorAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DelegatorAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgWithdrawDefiDelegatorRewardResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgWithdrawDefiDelegatorRewardResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgWithdrawDefiDelegatorRewardResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgWithdrawDefiCommission) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgWithdrawDefiCommission) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgWithdrawDefiCommission) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.DefiAddress) > 0 {
		i -= len(m.DefiAddress)
		copy(dAtA[i:], m.DefiAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DefiAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgWithdrawDefiCommissionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgWithdrawDefiCommissionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgWithdrawDefiCommissionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgFundDefiCommunityPool) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgFundDefiCommunityPool) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgFundDefiCommunityPool) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Depositor) > 0 {
		i -= len(m.Depositor)
		copy(dAtA[i:], m.Depositor)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Depositor)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Amount) > 0 {
		for iNdEx := len(m.Amount) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Amount[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *MsgFundDefiCommunityPoolResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgFundDefiCommunityPoolResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgFundDefiCommunityPoolResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateDefi) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Description.Size()
	n += 1 + l + sovTx(uint64(l))
	l = m.MinSelfDelegation.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.DelegatorAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DefiAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Value.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgCreateDefiResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgEditDefi) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Description.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.DefiAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.MinSelfDelegation != nil {
		l = m.MinSelfDelegation.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgEditDefiResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDefiDelegate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.DelegatorAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DefiAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Amount.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgDefiDelegateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDefiUndelegate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.DelegatorAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DefiAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Amount.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgDefiUndelegateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.CompletionTime)
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgSetDefiWithdrawAddress) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.DelegatorAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.WithdrawAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSetDefiWithdrawAddressResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgWithdrawDefiDelegatorReward) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.DelegatorAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DefiAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgWithdrawDefiDelegatorRewardResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgWithdrawDefiCommission) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.DefiAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgWithdrawDefiCommissionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgFundDefiCommunityPool) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Amount) > 0 {
		for _, e := range m.Amount {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	l = len(m.Depositor)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgFundDefiCommunityPoolResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateDefi) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateDefi: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateDefi: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Description.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinSelfDelegation", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.MinSelfDelegation.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DelegatorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DelegatorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DefiAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DefiAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Value.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateDefiResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateDefiResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateDefiResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgEditDefi) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgEditDefi: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgEditDefi: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Description.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DefiAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DefiAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinSelfDelegation", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			var v github_com_cosmos_cosmos_sdk_types.Int
			m.MinSelfDelegation = &v
			if err := m.MinSelfDelegation.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgEditDefiResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgEditDefiResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgEditDefiResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDefiDelegate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDefiDelegate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDefiDelegate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DelegatorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DelegatorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DefiAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DefiAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Amount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDefiDelegateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDefiDelegateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDefiDelegateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDefiUndelegate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDefiUndelegate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDefiUndelegate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DelegatorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DelegatorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DefiAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DefiAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Amount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDefiUndelegateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDefiUndelegateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDefiUndelegateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CompletionTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(&m.CompletionTime, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetDefiWithdrawAddress) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetDefiWithdrawAddress: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetDefiWithdrawAddress: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DelegatorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DelegatorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WithdrawAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WithdrawAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetDefiWithdrawAddressResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetDefiWithdrawAddressResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetDefiWithdrawAddressResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgWithdrawDefiDelegatorReward) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgWithdrawDefiDelegatorReward: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgWithdrawDefiDelegatorReward: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DelegatorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DelegatorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DefiAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DefiAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgWithdrawDefiDelegatorRewardResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgWithdrawDefiDelegatorRewardResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgWithdrawDefiDelegatorRewardResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgWithdrawDefiCommission) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgWithdrawDefiCommission: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgWithdrawDefiCommission: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DefiAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DefiAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgWithdrawDefiCommissionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgWithdrawDefiCommissionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgWithdrawDefiCommissionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgFundDefiCommunityPool) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgFundDefiCommunityPool: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgFundDefiCommunityPool: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Amount = append(m.Amount, types.Coin{})
			if err := m.Amount[len(m.Amount)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Depositor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Depositor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgFundDefiCommunityPoolResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgFundDefiCommunityPoolResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgFundDefiCommunityPoolResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
